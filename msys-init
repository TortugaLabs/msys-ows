#!/bin/bash
#
# Layer 2 configuration script
#
# Requires
# - ping
# - telnet
# - nc
#
set -euf -o pipefail

cfg=${MSYS_CFG:-/etc/msys.cfg}
secrets=${MSYS_SECRETS:-/etc/secrets.cfg}
passwd=${MSYS_PASSWD:-}
authkeys=${MSYS_AUTHKEYS:-}

if [ -d "${MSYS_LIBDIR:-}" ] ; then
  libdir=${MSYS_LIBDIR}
else
  if [ -d $(dirname $0)/ashlib ] ; then
    libdir=$(cd $(dirname $0) ; pwd)
  else
    libdir=${MSYS_LIBDIR:-/lib/msys}
  fi
fi
payload=""
autorun=""

send_file() {
  local lname="$1" ; shift
  local eofmarker="EOF_$RANDOM$RANDOM$RANDOM"
  echo "fixfile $* <<'$eofmarker'"
  echo "$(cat "$lname")"
  echo "$eofmarker"
}

apply_new() {
  local f="$1"
  # Make sure there is a default....
  if [ ! -f "$1-dist" ] ; then
    > "$1-dist"
  fi
  if [ ! -f "$1" ] ; then
    > "$1"
  fi
  if cmp "$1-dist" "$1-new" ; then
    # New file contains no changes...
    echo "$1: unchanged!" 1>&2
    return
  fi
  # Changes need to be applied
  if cmp "$1-dist" "$1" ; then
    # No manual changes have happened
    cp -a "$1-new" "$1"
    cp -a "$1-new" "$1-dist"
    echo "$1: updated"
    return
  fi
  # Changes being submitted while manual changes exist!
  echo "$1: manual changes detected!"
}


while [ $# -gt 0 ]
do
  case "$1" in
  --secrets=*)
    secrets=${1#--secrets=}
    ;;
  --cfg=*)
    cfg=${1#--cfg=}
    ;;
  --lib=*)
    libdir=${1#--lib=}
    ;;
  --passwd=*)
    passwd=${1#--passwd=}
    ;;
  --payload=*)
    payload=$1
    ;;
  --autorun)
    autorun=$1
    ;;
  --no-autorun)
    autorun=$1
    ;;
  --auth-keys=*)
    authkeys=$(cat ${1#--auth-keys})
    ;;
  *)
    break
    ;;
  esac
  shift
done

. $libdir/ashlib/core.sh
. $libdir/ashlib/fixfile.sh

[ -z "$passwd" ] && fatal "Define a default password!" || :
[ -z "$authkeys" ] && fatal "Define authorized keys" || :
fact_init_ip=192.168.1.1

for target in "$@"
do
  if ! ping -c 1 "$target" ; then
    continue
  fi

  if [ "$target" = "$fact_init_ip" ] ; then
    # OK, the factory reset IP is available...
    res=$( (sleep 1 ; echo 'true' ; sleep 1) | telnet "$target" 2>&1 ) || :
    if grep -q "passwd" <<<"$res" ; then
      echo "TELNET is active"

      echo "Setting default root password and auth keys"
      (
	cat <<-EOF
	set -x
	passwd
	$passwd
	$passwd
	tee /etc/dropbear/authorized_keys <<_EOF_
	$authkeys
	_EOF_
	. /etc/openwrt_release
	echo "\$DISTRIB_ID \$DISTRIB_CODENAME \$DISTRIB_TARGET (\$DISTRIB_RELEASE \$DISTRIB_REVISION)" | tee /etc/banner
	exit
	EOF
      ) | (
	while read ln
	do
	  echo "$ln" ; sleep 1
	done
      ) | telnet "$target" || echo exit=$?
      # Wait for SSH to come up....
      retries=30
      while ! ssh \
		-o 'StrictHostKeyChecking=no' \
		-o 'UserKnownHostsFile=/dev/null' \
		-o "KexAlgorithms +diffie-hellman-group1-sha1" \
		-l root $target true
      do
	retries=$(expr $retries - 1)
	[ $retries -eq 0 ] && fatal "SSHD failed to start..."
	sleep 3
      done
    fi
  fi


  (
    echo "secrets=/etc/secrets.cfg"
    echo "cfg=/etc/msys.cfg"
    declare -f fixfile
    send_file "$cfg" --mode=644 '$cfg'-new
    send_file "$secrets" --mode=600 '$secrets'-new
    declare -f apply_new
    echo 'apply_new $cfg'
    echo 'apply_new $secrets'
  ) | ssh \
		-o 'StrictHostKeyChecking=no' \
		-o 'UserKnownHostsFile=/dev/null' \
		-o "KexAlgorithms +diffie-hellman-group1-sha1" \
		-l root $target

  #~ scp \
	#~ -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile=/dev/null' \
	#~ -p \
	#~ "$cfg" "$secrets" "root@$target":/etc
  $libdir/msys-deploy --lib=$libdir $payload $autorun "$target"


done
